data0[[w]]$inBFPnfoci,
#data0[[w]]$inGFPnfoci,
data0[[w]]$x,
data0[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
#rep (design$PDEF$GFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$well[design$PDEF$well==w], times = length(data0[[w]]$cell))
)
colnames(data[[w]]) = c(
"cell",
"cellsize",
"pic",
"RFP_b5",
#"GFP_b0",
"BFP_b5",
"RFP_foci",
#"GFP_foci",
"BFP_foci",
#"GFP_foci_size",
"RFP_foci_size",
"BFP_foci_size",
"nfoci_RFP",
"nfoci_BFP",
# "nfoci_GFP",
"x",
"y",
"rep",
"octamer",
"dimer",
# "kinase",
"well"
)
}
for (w in well) {
data[[w]] = data.frame (data0[[w]]$cell,
data0[[w]]$area,
data0[[w]]$pic,
data0[[w]]$RFP_int_b5,
# data0[[w]]$GFP_int_b0,
data0[[w]]$BFP_int_b5,
data0[[w]]$f1_inRFP_toRFPmed,
#data0[[w]]$f1_inGFP_toGFPmed,
data0[[w]]$f1_inBFP_toBFPmed,
# data0[[w]]$f1_inGFParea,
data0[[w]]$f1_inRFParea,
data0[[w]]$f1_inBFParea,
data0[[w]]$inRFPnfoci,
data0[[w]]$inBFPnfoci,
#data0[[w]]$inGFPnfoci,
data0[[w]]$x,
data0[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
#rep (design$PDEF$GFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
#rep (design$PDEF$well[design$PDEF$well==w], times = length(data0[[w]]$cell))
)
colnames(data[[w]]) = c(
"cell",
"cellsize",
"pic",
"RFP_b5",
#"GFP_b0",
"BFP_b5",
"RFP_foci",
#"GFP_foci",
"BFP_foci",
#"GFP_foci_size",
"RFP_foci_size",
"BFP_foci_size",
"nfoci_RFP",
"nfoci_BFP",
# "nfoci_GFP",
"x",
"y",
"rep",
"octamer",
"dimer",
# "kinase",
#"well"
)
}
for (w in well) {
data[[w]] = data.frame (data0[[w]]$cell,
data0[[w]]$area,
data0[[w]]$pic,
data0[[w]]$RFP_int_b5,
# data0[[w]]$GFP_int_b0,
data0[[w]]$BFP_int_b5,
data0[[w]]$f1_inRFP_toRFPmed,
#data0[[w]]$f1_inGFP_toGFPmed,
data0[[w]]$f1_inBFP_toBFPmed,
# data0[[w]]$f1_inGFParea,
data0[[w]]$f1_inRFParea,
data0[[w]]$f1_inBFParea,
data0[[w]]$inRFPnfoci,
data0[[w]]$inBFPnfoci,
#data0[[w]]$inGFPnfoci,
data0[[w]]$x,
data0[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data0[[w]]$cell))
#rep (design$PDEF$GFP[design$PDEF$well==w], times = length(data0[[w]]$cell)),
#rep (design$PDEF$well[design$PDEF$well==w], times = length(data0[[w]]$cell))
)
colnames(data[[w]]) = c(
"cell",
"cellsize",
"pic",
"RFP_b5",
#"GFP_b0",
"BFP_b5",
"RFP_foci",
#"GFP_foci",
"BFP_foci",
#"GFP_foci_size",
"RFP_foci_size",
"BFP_foci_size",
"nfoci_RFP",
"nfoci_BFP",
# "nfoci_GFP",
"x",
"y",
"rep",
"octamer",
"dimer"
# "kinase",
#"well"
)
}
str(data0)
str(dat.ready_to_analyze)
design$CHANELS
str(design)
# Data Manipulation + Cleaning --------------------------------------------
#Raw Image Processing
data.raw = microscope.load.data(design)
data.raw = uscope.process.add.ncells(data = data.raw)
lsos() ## check how much memory the object takes
design = uscope.process.estimate.background(data.raw, design)
data.1    = uscope.process.reorder(data.raw, design=design)
data.1    = uscope.process.remove.first.pic(data.1)
data.1    = uscope.process.remove.background(data.1, design)
uscope.count.cells(data.1)
data.1    = uscope.process.remove.small(data.1, MIN.size=1000,MAX.size=2500)
data.1   = uscope.process.BF(data.1)
data.12dan   = uscope.process.remove.BF.outliers(data.1, cutoff=0.8)
data.12dan   = uscope.process.add.ncells(data = data.12dan)
uscope.count.cells(data.12dan)
#Create condensed df for logs
well = design$PDEF$well
datad = vector("list")
str(data.12dan)
head(design$PDEF)
datad = vector("list")
for (w in well) {
datad[[w]] = data.frame (data.12dan$comp[[w]]$cell,
data.12dan$comp[[w]]$area,
data.12dan$comp[[w]]$pic,
data.12dan$comp[[w]]$RFP_int_b5,
data.12dan$comp[[w]]$BFP_int_b5,
data.12dan$comp[[w]]$f1_inRFP_toRFPmed,
data.12dan$comp[[w]]$f1_inBFP_toBFPmed,
data.12dan$comp[[w]]$f1_inBFParea,
data.12dan$comp[[w]]$inBFPnfoci,
data.12dan$comp[[w]]$x,
data.12dan$comp[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$well[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell))
)
colnames(datad[[w]]) = c("cell", "cellsize","pic","RFP","BFP","RFP_foci", "BFP_foci", "BFP_foci_size","nfoci","x","y", "rep", "xmer","dimer", "well")
}
tabdan = do.call(rbind, datad)
str(tabdan)
datad = vector("list")
str(datad)
for (w in well) {
datad[[w]] = data.frame (data.12dan$comp[[w]]$cell,
data.12dan$comp[[w]]$area,
data.12dan$comp[[w]]$pic,
data.12dan$comp[[w]]$RFP_int_b5,
data.12dan$comp[[w]]$BFP_int_b5,
data.12dan$comp[[w]]$f1_inRFP_toRFPmed,
data.12dan$comp[[w]]$f1_inBFP_toBFPmed,
data.12dan$comp[[w]]$f1_inBFParea,
data.12dan$comp[[w]]$inBFPnfoci,
data.12dan$comp[[w]]$x,
data.12dan$comp[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$plot_title_line1[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$well[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell))
)
colnames(datad[[w]]) = c("cell", "cellsize","pic","RFP","BFP","RFP_foci", "BFP_foci", "BFP_foci_size","nfoci","x","y", "rep", "strain", "xmer","dimer", "well")
}
tabdan = do.call(rbind, datad)
unique(tabdan$strain)
plotphase = function(...){
ggplot ()+ geom_point(data=subset(tab, ...), aes(RFP_b5, BFP_b5), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")
}
plotphase = function(...){
ggplot ()+ geom_point(data=subset(tabdan, ...), aes(RFP_b5, BFP_b5), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")
}
for (s in unique(tabdan$strain)) {
plotphase(RFP_foci==0 & BFP_foci == 0 & strain == s)
}
subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
s
ggplot ()+ geom_point(data=subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s), aes(RFP_b5, BFP_b5), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")
ggplot ()+ geom_point(data=subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s), aes(RFP, BFP), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")
ggplot ()+ geom_point(data=subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s), aes(RFP, BFP), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")+
ggtitle(s)
datad = vector("list")
for (w in well) {
datad[[w]] = data.frame (data.12dan$comp[[w]]$cell,
data.12dan$comp[[w]]$area,
data.12dan$comp[[w]]$pic,
data.12dan$comp[[w]]$RFP_int_b5,
data.12dan$comp[[w]]$BFP_int_b5,
data.12dan$comp[[w]]$f1_inRFP_toRFPmed,
data.12dan$comp[[w]]$f1_inBFP_toBFPmed,
data.12dan$comp[[w]]$f1_inBFParea,
data.12dan$comp[[w]]$inBFPnfoci,
data.12dan$comp[[w]]$x,
data.12dan$comp[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$plot_title_line1[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$plot_title_line2[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$well[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell))
)
colnames(datad[[w]]) = c("cell", "cellsize","pic","RFP","BFP","RFP_foci", "BFP_foci", "BFP_foci_size","nfoci","x","y", "rep", "strain", "phenotype","xmer","dimer", "well")
}
tabdan = do.call(rbind, datad)
plotphase = function(...){
ggplot ()+ geom_point(data=subset(tabdan, ...), aes(RFP, BFP), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")+
ggtitle(s)
}
for (s in unique(tabdan$strain)) {
plotphase(RFP_foci==0 & BFP_foci == 0 & strain == s)
}
dev.off()
for (s in unique(tabdan$strain)) {
plotphase(RFP_foci==0 & BFP_foci == 0 & strain == s)
}
getwd()
pdf("test.pdf")
for (s in unique(tabdan$strain)) {
plotphase(RFP_foci==0 & BFP_foci == 0 & strain == s)
}
dev.off()
for (s in unique(tabdan$strain)) {
ggplot ()+ geom_point(data=subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s), aes(RFP, BFP), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")+
ggtitle(s)
}
for (s in unique(tabdan$strain)) {
ggplot ()+ geom_point(data=subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s), aes(RFP, BFP), size=.7)+
theme(axis.line = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+
scale_y_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
scale_x_continuous(trans=log2_trans(),limits = c(1,50000), breaks= c(0,1,10,100,1000,10000))+
geom_abline(slope=1, intercept=(-0):(0), color="grey")+
#ggtitle(paste("Cells with GFP Intensity >",as.character(GFP_val),"AU"))+
xlab("2mer (RFP Intensity in AU)")+
ylab("8mer (BFP Intensity in AU)")+
ggtitle(s)
}
unique(tabdan$strain
)
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
temp <- subset(tab.rev.nofoci.reduced, dimer == mut)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .2, main = unique(s),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .2, main = unique(s),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .5, main = unique(s),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = unique(s),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
which(tabdan$strain == s)
which(tabdan$strain == s)[1]
which(tabdan$strain == s)[0]
which(tabdan$strain == s)[1]
tabdan[which(tabdan$strain == s)[1],"phenotype"]
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste(s,phenotype,ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste(s,phenotype,"n=",ncells,sep = ", "),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste0(s,", ",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
par(mfrow=c(3,3))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste0(s,", ",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
par(mfrow=c(3,3))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste0(s,", ",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_wo_foci", useDingbats = F)
par(mfrow=c(3,3))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste0(s,", ",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_wo_foci.pdf", useDingbats = F)
par(mfrow=c(3,3))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste0(s,", ",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_wo_foci.pdf", useDingbats = F)
par(mfrow=c(2,2))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .7, main = paste0(s,", ",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .5, main = paste0(s,",\n",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .3, main = paste0(s,",\n",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_wo_foci.pdf", useDingbats = F)
par(mfrow=c(2,2))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .3, main = paste0(s,",\n",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_w_foci.pdf", useDingbats = F)
par(mfrow=c(2,2))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci!=0 & BFP_foci != 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .3, main = paste0(s,",\n",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
# Data Manipulation + Cleaning --------------------------------------------
#Raw Image Processing
data.raw = microscope.load.data(design)
data.raw = uscope.process.add.ncells(data = data.raw)
lsos() ## check how much memory the object takes
design = uscope.process.estimate.background(data.raw, design)
data.1    = uscope.process.reorder(data.raw, design=design)
data.1    = uscope.process.remove.first.pic(data.1)
data.1    = uscope.process.remove.background(data.1, design)
uscope.count.cells(data.1)
data.1    = uscope.process.remove.small(data.1, MIN.size=1000,MAX.size=1800)
data.1   = uscope.process.BF(data.1)
data.12dan   = uscope.process.remove.BF.outliers(data.1, cutoff=0.8)
data.12dan   = uscope.process.add.ncells(data = data.12dan)
uscope.count.cells(data.12dan)
well = design$PDEF$well
datad = vector("list")
for (w in well) {
datad[[w]] = data.frame (data.12dan$comp[[w]]$cell,
data.12dan$comp[[w]]$area,
data.12dan$comp[[w]]$pic,
data.12dan$comp[[w]]$RFP_int_b5,
data.12dan$comp[[w]]$BFP_int_b5,
data.12dan$comp[[w]]$f1_inRFP_toRFPmed,
data.12dan$comp[[w]]$f1_inBFP_toBFPmed,
data.12dan$comp[[w]]$f1_inBFParea,
data.12dan$comp[[w]]$inBFPnfoci,
data.12dan$comp[[w]]$x,
data.12dan$comp[[w]]$y,
rep (design$PDEF$Replica[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$plot_title_line1[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$plot_title_line2[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$BFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$RFP[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell)),
rep (design$PDEF$well[design$PDEF$well==w], times = length(data.12dan$comp[[w]]$cell))
)
colnames(datad[[w]]) = c("cell", "cellsize","pic","RFP","BFP","RFP_foci", "BFP_foci", "BFP_foci_size","nfoci","x","y", "rep", "strain", "phenotype","xmer","dimer", "well")
}
tabdan = do.call(rbind, datad)
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_wo_foci_1800_cutoff.pdf", useDingbats = F)
par(mfrow=c(2,2))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci==0 & BFP_foci == 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .3, main = paste0(s,",\n",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
pdf(file= "/Users/d/research/result_files/190505_new/dest/ko/Rplots/cell_w_foci_1800_cutoff.pdf", useDingbats = F)
par(mfrow=c(2,2))
for(s in unique(tabdan$strain)){
temp <- subset(tabdan, RFP_foci!=0 & BFP_foci != 0 & strain == s)
phenotype <- temp$phenotype[1]
ncells <- nrow(temp)
plot(x = log2(temp$RFP), y = log2(temp$BFP), pch = 20, cex = .3, main = paste0(s,",\n",phenotype,", ","n=",ncells),
xlab = "dimer-Im2", ylab = "octamer-E9", xlim = c(-1,15), ylim = c(-1,15))
}
dev.off()
